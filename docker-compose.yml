version: '3.8'

services:
  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgresql
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
    networks:
      - mynetwork
    restart: always

  app:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.app
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      TOKEN_EXPIRE_TIME: ${TOKEN_EXPIRE_TIME}
      JWT_SECRET_REFRESH_KEY: ${JWT_SECRET_REFRESH_KEY}
      TOKEN_REFRESH_EXPIRE_TIME: ${TOKEN_REFRESH_EXPIRE_TIME}
      LOG_FILE_SIZE_KB: ${LOG_FILE_SIZE_KB}
      LOG_LEVEL: ${LOG_LEVEL}
    ports:
      - "${PORT}:${PORT}"
    command: npm run start:dev
    volumes:
      - /app/node_modues
      - ./src:/app/src
    depends_on:
      - postgres
    networks:
      - mynetwork

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
    
volumes:
  postgres_data:
  postgres_logs:
